---
- name: Cluan up local tags
  shell: "git fetch --prune {{ release.remote }}  \"+refs/tags/*:refs/tags/*\""
  args:
    chdir: "{{ release.target }}/{{ release.project | lower() }}/{{ release.release_symlink }}"

- name: Get current tag
  shell: "git describe --dirty --always --abbrev=0 --tags 2>&1 | grep -F '.' | grep '{{ release.semver.prefix }}'"
  args:
    chdir: "{{ release.target }}/{{ release.project | lower() }}/{{ release.release_symlink }}"
  register: current_tag
  failed_when: current_tag.stdout == ""

- name: Check if new tag should be generated
  shell: "git diff tags/{{ current_tag.stdout }}"
  args:
    chdir: "{{ release.target }}/{{ release.project | lower() }}/{{ release.release_symlink }}"
  register: diff_current_tag
  failed_when: diff_current_tag.stdout == ""

- name: Generate new release tag version
  semver:
    version: "{{ current_tag.stdout }}"
    type: "{{ release.semver.type }}"
    prefix: "{{ release.semver.prefix }}"
  register: release_tag

- name: Create and checkout new release tag
  shell: "{{ item }}"
  args:
    chdir: "{{ release.target }}/{{ release.project | lower() }}/{{ release.release_symlink }}"
  with_items:
    - "git tag -f -a {{ release_tag.version }} -m \"Version {{ release_tag.version }} released by {{ release.releaser }}\""
    - "git checkout tags/{{ release_tag.version }} -B release-{{ release_tag.version }}"
  when: release_tag.version is defined

- name: Publish new release tag
  shell: "git push origin {{ release_tag.version }}"
  args:
    chdir: "{{ release.target }}/{{ release.project | lower() }}/{{ release.release_symlink }}"
  when: release_tag.version is defined and release.semver.publish
  async: 3600
  poll: 0

- name: Get Changelog
  shell: "git log {{ current_tag.stdout }}..{{ release_tag.version }} --pretty=format:\"%h %an, %ar: %s\" --no-merges"
  args:
    chdir: "{{ release.target }}/{{ release.project | lower() }}/{{ release.release_symlink }}"
  register: changelog
  when: release_tag.version is defined

- name: Released new version
  debug:
    msg: "Type: {{ release.semver.type }}, Previous: {{ current_tag.stdout }}, New: {{ release_tag.version }}, Diff: {{ release.semver.diff_url }}/{{ current_tag.stdout }}...{{ release_tag.version }}, Changelog: {{ changelog.stdout_lines }}"
  when: release_tag.version is defined

- name: Setting success message
  set_fact:
    message: "The \"{{ release.semver.type }}\" version {{ release_tag.version }} of {{ release.project }} was successfuly published and released."
